/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import ouragendaclient.MessageExchanger;
import ouragendaclient.ModifySubstring;


/**
 *
 * @author Marvin
 */
public class JEvents extends javax.swing.JFrame {

    /**
     * Creates new form telaU
     */
    public JEvents(JAgenda j,ArrayList<String> event) {
        this.jagenda = j;
        this.event = event;
        initComponents();
        
        if(!event.isEmpty()){
            
            nameEvent.setText(event.get(1));
            localEvent.setText(event.get(2));
            inicioHora.setSelectedItem(05);
            pegarData.setDate(Date.valueOf(event.get(3)));
            fimHora.setSelectedItem(4);
            descEvent.setText(event.get(6));
            inicioMin.setSelectedItem(event.get(3));
            fimMin.setSelectedItem(event.get(4));
        }
        
        getUsers();
    }
    
    DefaultTableModel modelusers;
    ArrayList<String> event;
    JAgenda jagenda;
    String data;
    String criarEvento, nEvento, lEvento, dEvento, showEvento;
    String iHora, iMin, fHora, fMin;

    private void getUsers(){
        
        modelusers = (DefaultTableModel) tUsers.getModel();
        
        MessageExchanger me = new MessageExchanger(10000);
        ModifySubstring m = new ModifySubstring();
        String messageAnswer;
        ArrayList users = new ArrayList();
        String[] section;
        String message = "";
        int qtdusers = 0;
            
        while (modelusers.getRowCount() > 0)  // limpa a tabela toda vez 
              modelusers.removeRow(0);
        
        me.SendMessage("SHOW_USERS");
        
        messageAnswer = me.getAnswer("SHOW_USERS_FB");
        
        section = messageAnswer.split("&");
        
        if(section[1].substring(8).equals("SUCCESS")){
            
            qtdusers = Integer.parseInt(section[2].substring(9));
            
            for(int i=0;i<qtdusers;i++){
                
                messageAnswer = me.getAnswer("USER");
                section = messageAnswer.split("&");
                modelusers.addRow(new Object[] { section[2].substring(4),section[3].substring(6),true});
                
            }    
        }
    }
    
    private void inviteUsers(String eventid){
        int qtdusers = modelusers.getRowCount();
        MessageExchanger me = new MessageExchanger(10000);
        String messageanswer;
        String[] section;
        String usersInvited = "Os convidados: {";
        String usersNotInvited = "";
        
        for(int i=0;i<qtdusers;i++){
            if(modelusers.getValueAt(i,2).equals(true)){
                me.SendMessage("CHECK_AVAILABLE&-guest=" + modelusers.getValueAt(i,1) + "&-begin=" +data+" "+iHora+":"+iMin+":00-03&-end="+
                data+" "+fHora+":"+fMin+":00-03");
                
                messageanswer = me.getAnswer("CHECK_AVAILABLE_FB");
                section = messageanswer.split("&");
                if(section[1].substring(8).equals("SUCCESS") && section[2].substring(11).equals("TRUE")){
                    
                    me.SendMessage("INVITE&-guest=" + modelusers.getValueAt(i,1) + "&-event_id=" + eventid);
                
                    me.getAnswer("INVITE_FB");
                    
                    usersInvited +=  "{ " + modelusers.getValueAt(i,1) + " }";
                }
                else{
                    usersNotInvited += "{ " + modelusers.getValueAt(i,1) + " }";
                }
            }
        }
        
        usersInvited += " foram convidados com sucesso.";
        
        if(!usersNotInvited.equals("")){
            usersNotInvited += " não foram convidados com sucesso.";
        }
        
        JFrame jframe = new JFrame();
        JOptionPane.showMessageDialog(jframe, "<html><body>" + usersInvited + "<br>" + usersNotInvited + ".</html></body>");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        createEvent = new javax.swing.JButton();
        nameEvent = new javax.swing.JTextField();
        localEvent = new javax.swing.JTextField();
        descEvent = new javax.swing.JTextField();
        inicioHora = new javax.swing.JComboBox<>();
        inicioMin = new javax.swing.JComboBox<>();
        fimHora = new javax.swing.JComboBox<>();
        fimMin = new javax.swing.JComboBox<>();
        pegarData = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tUsers = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(830, 500));
        setSize(new java.awt.Dimension(800, 550));
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 550));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 550));
        jPanel2.setLayout(null);

        createEvent.setBackground(new java.awt.Color(255, 255, 255));
        createEvent.setText("Salvar");
        createEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createEventMouseClicked(evt);
            }
        });
        createEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEventActionPerformed(evt);
            }
        });
        jPanel2.add(createEvent);
        createEvent.setBounds(363, 400, 110, 23);

        nameEvent.setText("Nome do Evento");
        nameEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameEventActionPerformed(evt);
            }
        });
        jPanel2.add(nameEvent);
        nameEvent.setBounds(100, 150, 300, 20);

        localEvent.setText("Local do Evento");
        localEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localEventActionPerformed(evt);
            }
        });
        jPanel2.add(localEvent);
        localEvent.setBounds(100, 210, 300, 20);

        descEvent.setText("Descrição do Evento");
        jPanel2.add(descEvent);
        descEvent.setBounds(100, 240, 400, 20);

        inicioHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "00" }));
        inicioHora.setSelectedIndex(8);
        inicioHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioHoraActionPerformed(evt);
            }
        });
        jPanel2.add(inicioHora);
        inicioHora.setBounds(530, 150, 70, 20);

        inicioMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "10", "20", "30", "40", "50", " " }));
        jPanel2.add(inicioMin);
        inicioMin.setBounds(620, 150, 70, 20);

        fimHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "00" }));
        fimHora.setSelectedIndex(8);
        jPanel2.add(fimHora);
        fimHora.setBounds(530, 220, 70, 20);

        fimMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "10", "20", "30", "40", "50", " " }));
        jPanel2.add(fimMin);
        fimMin.setBounds(620, 220, 70, 20);
        jPanel2.add(pegarData);
        pegarData.setBounds(100, 180, 300, 25);

        tUsers.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tUsers.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        tUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "Convidar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tUsers.setColumnSelectionAllowed(true);
        tUsers.setRowHeight(20);
        jScrollPane1.setViewportView(tUsers);
        tUsers.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tUsers.getColumnModel().getColumnCount() > 0) {
            tUsers.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(100, 300, 620, 90);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ourCreate.jpg"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, -20, 960, 500);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 820, 470);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameEventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameEventActionPerformed

    private void localEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localEventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_localEventActionPerformed

    private void createEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEventActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_createEventActionPerformed

    private void inicioHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inicioHoraActionPerformed

    private void createEventMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createEventMouseClicked
        // TODO add your handling code here:
        data = ((JTextField)pegarData.getDateEditor().getUiComponent()).getText();
        nEvento = nameEvent.getText();
        lEvento = localEvent.getText();
        dEvento = descEvent.getText();
        iHora = (String) inicioHora.getSelectedItem();
        iMin = (String) inicioMin.getSelectedItem();
        fHora = (String) fimHora.getSelectedItem();
        fMin = (String) fimMin.getSelectedItem();
        String message = "";
        String[] section;
        String idevent = "";
        MessageExchanger me = new MessageExchanger(10000);
        
        if(event.isEmpty()){
            criarEvento = "CREATE_EVENT&-name="+nEvento+"&-begin="+data+" "+iHora+":"+iMin+":00-03&-end="+
            data+" "+fHora+":"+fMin+":00-03&-local="+lEvento+"&-desc="+dEvento+"";
            
            me.SendMessage(criarEvento);
             
            String messageAnswer;
            
            messageAnswer = me.getAnswer("CREATE_EVENT_FB");
            section = messageAnswer.split("&");
        
            if(section[1].substring(8).equals("SUCCESS")){
                
                idevent = section[2].substring(9);  /* Para convidar usuários */
                this.inviteUsers(idevent);
                JFrame jframe = new JFrame();
                JOptionPane.showMessageDialog(jframe,"Evento foi criado com sucesso.");
                jagenda.getEvents();
                dispose();
            }else{
                JFrame jframe = new JFrame();
                JOptionPane.showMessageDialog(jframe,"Evento não foi criado");
            }
            
        }else{
            criarEvento = "UPDATE_EVENT&-event_id=" + event.get(0) + "&-name=" + nEvento + "&-begin=" + data + " " + iHora + ":" + iMin + ":00-03&-end=" + data+" "+fHora+":"+fMin+":00-03&-local="+lEvento+"&-desc="+dEvento+"";
            me.SendMessage(criarEvento);
            
            String messageAnswer;
            
            messageAnswer = me.getAnswer("UPDATE_EVENT_FB");
            
            if(messageAnswer.equals("UPDATE_EVENT_FB&-status=SUCCESS")){
                JFrame jframe = new JFrame();
                JOptionPane.showMessageDialog(jframe,"Evento salvo com sucesso.");
                jagenda.getEvents();
                dispose();
            }else{
                JFrame jframe = new JFrame();
                JOptionPane.showMessageDialog(jframe,"Evento não foi salvo.");
            }
        }            
        
    }//GEN-LAST:event_createEventMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEvent;
    private javax.swing.JTextField descEvent;
    private javax.swing.JComboBox<String> fimHora;
    private javax.swing.JComboBox<String> fimMin;
    private javax.swing.JComboBox<String> inicioHora;
    private javax.swing.JComboBox<String> inicioMin;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField localEvent;
    private javax.swing.JTextField nameEvent;
    private com.toedter.calendar.JDateChooser pegarData;
    private javax.swing.JTable tUsers;
    // End of variables declaration//GEN-END:variables
}
